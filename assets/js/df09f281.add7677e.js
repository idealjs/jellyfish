"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[730],{876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7896),o=(n(2784),n(876));const a={},i="Audio",s={unversionedId:"Audio",id:"Audio",title:"Audio",description:"Overview",source:"@site/docs/Audio.md",sourceDirName:".",slug:"/Audio",permalink:"/jellyfish/docs/Audio",draft:!1,editUrl:"https://github.com/idealjs/jellyfish/tree/main/packages/apps/website/docs/Audio.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Asset IO",permalink:"/jellyfish/docs/Asset IO"},next:{title:"LoadDirectory",permalink:"/jellyfish/docs/LoadDirectory"}},l={},u=[{value:"<strong>Overview</strong>",id:"overview",level:3},{value:"<strong>Key Components</strong>",id:"key-components",level:3},{value:"<strong>Features</strong>",id:"features",level:3},{value:"<strong>Workflow</strong>",id:"workflow",level:3}],p={toc:u},d="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"audio"},"Audio"),(0,o.kt)("h3",{id:"overview"},(0,o.kt)("strong",{parentName:"h3"},"Overview")),(0,o.kt)("p",null,"An audio engine is a software component that handles the management and playback of audio in a game or application. It is responsible for playing back audio files, adjusting volume levels, managing audio channels, applying audio effects and spatialization, and much more."),(0,o.kt)("h3",{id:"key-components"},(0,o.kt)("strong",{parentName:"h3"},"Key Components")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1. Sound Sources:")," These are individual sounds that are played within the game. Each sound source has various properties such as volume, pitch, and positional data."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"2. Audio Channels:")," Channels are the streams through which audio is played. A game might have different channels for music, sound effects, and dialogue so that volumes and other properties can be controlled independently."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3. Audio Listener:")," This is a point in the game world that represents the player\u2019s ears. The engine uses the listener's position to calculate audio spatialization and provide a realistic 3D audio experience."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"4. Audio Buffers:")," Buffers are used to store audio data before it's sent to the audio hardware. They are an essential part of managing audio playback timing and latency."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"5. Mixer:")," The mixer is the part of the engine that combines all the different audio sources and channels into a final output that can be sent to the speakers."),(0,o.kt)("h3",{id:"features"},(0,o.kt)("strong",{parentName:"h3"},"Features")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1. Spatial Audio:")," This feature provides 3D audio effects by adjusting the volume and timing of audio based on the position of the sound sources and listener within the game world."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"2. Volume Control:")," The engine provides controls for adjusting the volume of individual sound sources and overall output."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3. Audio Effects:")," The engine can apply various effects to the audio such as reverb, echo, distortion, and more."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"4. Streaming:")," For longer audio files like background music, the engine supports streaming audio from disk to minimize memory usage."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"5. Compression:")," To save disk space and memory, the engine supports various audio compression formats."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"6. Cross-fading:")," The engine supports smooth transitions between different sound sources or music tracks through cross-fading."),(0,o.kt)("h3",{id:"workflow"},(0,o.kt)("strong",{parentName:"h3"},"Workflow")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Initialization:")," Initialize the audio engine and set up audio channels, mixer, and listener."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Load Audio Files:")," Load audio files into memory or prepare them for streaming."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Play Audio:")," Play audio from sound sources, control volume, and apply effects."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Monitor and Adjust:")," Monitor the audio playback to adjust volume levels, apply effects, or respond to changes in the game world."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Clean Up:")," When a sound has finished playing, it should be cleaned up and its resources freed.")),(0,o.kt)("p",null,"The audio engine plays a vital role in creating immersive and interactive experiences in games by providing a rich and dynamic audio environment."))}c.isMDXComponent=!0}}]);